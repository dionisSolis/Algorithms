#include <iostream>
#include <Windows.h>
#include <math.h>
#include <stdio.h>
#include <ctime>
#include <iomanip>
using namespace std;

void ShowInfo(int step, double x, double y) {
	cout << step << ") x = " << x << " y = " << y << endl;
}

void FindMinValue(double firstLimit, double secondLimit) {
	srand(time(0));
	double firstLimitSave = firstLimit, secondLimitSave = secondLimit;

	double min = 0;
	double epsilant = 0.000001;
	int step = 0;

	while (true) {
		double x1, a1, b1;

		double delta = secondLimit - firstLimit;

		double alpha = firstLimit + ((2 * delta) / (3 + sqrt(5)));
		double beta = firstLimit + ((2 * delta) / (1 + sqrt(5)));

		double yAlpha = alpha * alpha * alpha - alpha + exp(-alpha);
		double yBeta = beta * beta * beta - beta + exp(-beta);

		step++;

		if (yAlpha <= yBeta) {
			x1 = alpha;
			a1 = firstLimit;
			b1 = beta;
		}
		else {
			a1 = alpha;
			x1 = beta;
			b1 = secondLimit;
		}

		ShowInfo(step, x1, x1 * x1 * x1 - x1 + exp(-x1));

		if (b1 - a1 < epsilant) {
			min = x1;
			break;
		}
		else {
			firstLimit = a1;
			secondLimit = b1;
		}
	}

	cout << "\nМинимальное значение функции на [" << firstLimitSave << ", " << secondLimitSave << "]\n"
		<< "Точка минимума (" << min << ", " << min * min * min - min + exp(-min) << ")\n"
		<< "Количество шагов " << step
		<< "\nВремя работы программы " << clock() / 1000.0 << "\n\n";
}

void FindMaxValue(double firstLimit, double secondLimit) {
	srand(time(0));
	double firstLimitSave = firstLimit, secondLimitSave = secondLimit;

	double max = 0;
	double epsilant = 0.000001;
	int step = 0;

	while (true) {
		double x1, a1, b1;

		double delta = secondLimit - firstLimit;

		double alpha = firstLimit + ((2 * delta) / (3 + sqrt(5)));
		double beta = firstLimit + ((2 * delta) / (1 + sqrt(5)));

		double yAlpha = alpha * alpha * alpha - alpha + exp(-alpha);
		double yBeta = beta * beta * beta - beta + exp(-beta);

		step++;

		if (yAlpha >= yBeta) {
			x1 = alpha;
			a1 = firstLimit;
			b1 = beta;
		}
		else {
			a1 = alpha;
			x1 = beta;
			b1 = secondLimit;
		}

		ShowInfo(step, x1, x1 * x1 * x1 - x1 + exp(-x1));

		if (b1 - a1 < epsilant) {
			max = x1;
			break;
		}
		else {
			firstLimit = a1;
			secondLimit = b1;
		}
	}

	cout << "\nМаксимальное значение функции на [" << firstLimitSave << ", " << secondLimitSave << "]\n"
		<< "Точка максимума (" << max << ", " << max * max * max - max + exp(-max) << ")\n"
		<< "Количество шагов " << step
		<< "\nВремя работы программы " << clock() / 1000.0 << "\n\n";
}

int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	cout << "МЕТОД «ЗОЛОТОГО СЕЧЕНИЯ»\n\n";
	FindMinValue(-5, -3);
	FindMaxValue(-3, 0);
	FindMinValue(0, 3);
}
