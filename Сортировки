#include <iostream>
#include <math.h>
#include <ctime>
#include <Windows.h>
using namespace std;

int step[2];

void FillArray(int array[], int size) {
    for (int i = 0; i < size; i++) {
        array[i] = rand() % 12348;
    }
}

void PrintArray(int array[], int size) {
    for (int i = 0; i < size; i++) {
        cout << array[i] << " ";
    }
}

void CopyArray(int arrayFirst[], int arraySecond[], int size) {
    for (int i = 0; i < size; i++) {
        arrayFirst[i] = arraySecond[i];
    }
}

void SortByChoice(int array[], int size) {
    step[0] = 0;
    step[1] = 0;

    for (int i = 0; i < size - 1; i++) {
        int minIndex = i, replace = array[i];
        
        for (int j = i + 1; j < size; j++) {
            step[0]++;

            if (array[j] >= array[minIndex]) {
                minIndex = j;
                step[1]++;
            }
        }
        
        array[i] = array[minIndex];
        array[minIndex] = replace;
        step[1] += 2;
    }
}

void SortByInsert(int array[], int size) {
    step[0] = 0;
    step[1] = 0;

    for (int i = 1; i < size; i++) {
        int firstIndex = i;
        int secondIndex = i - 1;

        while (secondIndex > -1) {
            step[0]++;
            if (array[firstIndex] > array[secondIndex]) {
                int replace = array[secondIndex];

                array[secondIndex] = array[firstIndex];
                array[firstIndex] = replace;

                step[1] += 3;

                firstIndex--;
                secondIndex--;
            }
            else {
                break;
            }
        }
    }
}

void SortByBubble(int array[], int size) {
    step[0] = 0;
    step[1] = 0;

    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - 1; j++) {
            step[0] += 1;

            if (array[j] < array[j + 1]) {
                int replace = array[j + 1];
                array[j + 1] = array[j];
                array[j] = replace;

                step[1] += 3;
            }
        }
    }
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    
    const int size = 30;
    int array[size], arraySortingByChoice[size], arraySortingByInsert[size], arraySortingByBubble[size];

    FillArray(array, size);
    cout << "ИСХОДНЫЙ МАССИВ\n";
    PrintArray(array, size);

    CopyArray(arraySortingByChoice, array, size);
    cout << "\n\nСОРТИРОВКА ВЫБОРОМ\n";
    srand(time(0));
    SortByChoice(arraySortingByChoice, size);
    PrintArray(arraySortingByChoice, size);
    cout << "\nВремя: " << clock() / 1000.0 << " Сравнения: " << step[0] << " Перестановки: " << step[1];

    CopyArray(arraySortingByInsert, array, size);
    cout << "\n\nСОРТИРОВКА ВСТАВКАМИ\n";
    srand(time(0));
    SortByInsert(arraySortingByInsert, size);
    PrintArray(arraySortingByInsert, size);
    cout << "\nВремя: " << clock() / 1000.0 << " Сравнения: " << step[0] << " Перестановки: " << step[1];

    CopyArray(arraySortingByBubble, array, size);
    cout << "\n\nСОРТИРОВКА ПУЗЫРЬКОМ\n";
    srand(time(0));
    SortByBubble(arraySortingByBubble, size);
    PrintArray(arraySortingByBubble, size);
    cout << "\nВремя: " << clock() / 1000.0 << " Сравнения: " << step[0] << " Перестановки: " << step[1];
}   
